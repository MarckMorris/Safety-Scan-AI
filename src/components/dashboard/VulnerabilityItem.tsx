
"use client";

import type { Vulnerability } from "@/types";
import { Badge } from "@/components/ui/badge";
import { AlertTriangle, ShieldCheck, ShieldAlert, ShieldQuestion } from "lucide-react";
import { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from "@/components/ui/accordion";

interface VulnerabilityItemProps {
  vulnerability: Vulnerability;
}

const getSeverityBadgeVariant = (severity: Vulnerability["severity"]): "destructive" | "default" | "secondary" | "outline" => {
  switch (severity) {
    case "Critical":
      return "destructive";
    case "High":
      return "default"; // Using primary color for High, can be adjusted
    case "Medium":
      return "secondary";
    case "Low":
      return "outline";
    default:
      return "outline";
  }
};

const getSeverityIcon = (severity: Vulnerability["severity"]) => {
  switch (severity) {
    case "Critical":
      return <AlertTriangle className="w-5 h-5 text-destructive" />;
    case "High":
      return <ShieldAlert className="w-5 h-5 text-orange-500" />; // Or use primary from theme
    case "Medium":
      return <ShieldQuestion className="w-5 h-5 text-yellow-500" />;
    case "Low":
      return <ShieldCheck className="w-5 h-5 text-green-500" />;
    default:
      return <ShieldQuestion className="w-5 h-5 text-muted-foreground" />;
  }
};

export default function VulnerabilityItem({ vulnerability }: VulnerabilityItemProps) {
  return (
    <AccordionItem value={vulnerability.description.slice(0,20)} className="bg-card rounded-lg shadow-sm mb-4 border px-1">
      <AccordionTrigger className="p-4 hover:no-underline">
        <div className="flex items-center justify-between w-full">
          <div className="flex items-center gap-3">
            {getSeverityIcon(vulnerability.severity)}
            <span className="font-medium text-base text-left">{vulnerability.type}</span>
          </div>
          <Badge variant={getSeverityBadgeVariant(vulnerability.severity)} className="text-sm px-3 py-1">
            {vulnerability.severity}
          </Badge>
        </div>
      </AccordionTrigger>
      <AccordionContent className="p-4 pt-0">
        <p className="text-muted-foreground mb-3">{vulnerability.description}</p>
        {(vulnerability.affectedUrl || vulnerability.affectedFile) && (
          <div className="text-sm space-y-1 bg-muted p-3 rounded-md">
            {vulnerability.affectedUrl && (
              <p><strong>Affected URL:</strong> <a href={vulnerability.affectedUrl} target="_blank" rel="noopener noreferrer" className="text-primary hover:underline">{vulnerability.affectedUrl}</a></p>
            )}
            {vulnerability.affectedFile && (
              <p><strong>Affected File:</strong> <code className="bg-secondary px-1 py-0.5 rounded-sm">{vulnerability.affectedFile}</code></p>
            )}
          </div>
        )}
      </AccordionContent>
    </AccordionItem>
  );
}
