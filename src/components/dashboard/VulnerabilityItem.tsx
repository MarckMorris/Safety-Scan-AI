
"use client";

import type { Vulnerability } from "@/types";
import { Badge } from "@/components/ui/badge";
import { AlertTriangle, ShieldCheck, ShieldAlert, ShieldQuestion, ShieldX } from "lucide-react";
import { AccordionContent, AccordionItem, AccordionTrigger } from "@/components/ui/accordion"; // No Accordion here

interface VulnerabilityItemProps {
  vulnerability: Vulnerability;
  index: number; // Add index for unique AccordionItem value
}

const getSeverityBadgeVariant = (severity: Vulnerability["severity"]): "destructive" | "default" | "secondary" | "outline" => {
  switch (severity) {
    case "Critical":
      return "destructive";
    case "High": // Using orange-ish for High, not primary
      return "default"; // Will be themed to destructive-like by Tailwind config for this component
    case "Medium":
      return "secondary";
    case "Low":
      return "outline";
    default:
      return "outline";
  }
};

const getSeverityIcon = (severity: Vulnerability["severity"]) => {
  switch (severity) {
    case "Critical":
      return <ShieldX className="w-5 h-5 text-destructive" />; // More impactful for critical
    case "High":
      return <AlertTriangle className="w-5 h-5 text-orange-500" />;
    case "Medium":
      return <ShieldAlert className="w-5 h-5 text-yellow-500" />;
    case "Low":
      return <ShieldCheck className="w-5 h-5 text-green-500" />;
    default:
      return <ShieldQuestion className="w-5 h-5 text-muted-foreground" />;
  }
};

export default function VulnerabilityItem({ vulnerability, index }: VulnerabilityItemProps) {
  return (
    <AccordionItem value={`vuln-${index}-${vulnerability.type}`} className="bg-card rounded-lg shadow-sm mb-2 border px-1 last:mb-0">
      <AccordionTrigger className="p-4 hover:no-underline text-left">
        <div className="flex items-center justify-between w-full gap-2">
          <div className="flex items-center gap-3 flex-1 min-w-0">
            {getSeverityIcon(vulnerability.severity)}
            <span className="font-medium text-base truncate" title={vulnerability.type}>{vulnerability.type}</span>
          </div>
          <Badge 
            variant={getSeverityBadgeVariant(vulnerability.severity)} 
            className={`text-sm px-3 py-1 whitespace-nowrap
              ${vulnerability.severity === "High" ? "bg-orange-500 border-orange-600 text-white" : ""}
              ${vulnerability.severity === "Medium" ? "bg-yellow-400 border-yellow-500 text-yellow-900" : ""}
            `}
          >
            {vulnerability.severity}
          </Badge>
        </div>
      </AccordionTrigger>
      <AccordionContent className="p-4 pt-0">
        <p className="text-muted-foreground mb-3 whitespace-pre-line">{vulnerability.description}</p>
        {(vulnerability.affectedUrl || vulnerability.affectedFile) && (
          <div className="text-sm space-y-1 bg-secondary/50 p-3 rounded-md border">
            {vulnerability.affectedUrl && (
              <p><strong>Affected URL:</strong> <a href={vulnerability.affectedUrl} target="_blank" rel="noopener noreferrer" className="text-primary hover:underline break-all">{vulnerability.affectedUrl}</a></p>
            )}
            {vulnerability.affectedFile && (
              <p><strong>Affected File:</strong> <code className="bg-muted px-1 py-0.5 rounded-sm break-all">{vulnerability.affectedFile}</code></p>
            )}
          </div>
        )}
      </AccordionContent>
    </AccordionItem>
  );
}
